// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrekenWeb.WebApi.Models;

namespace PrekenWeb.WebApi.Migrations
{
    [DbContext(typeof(PrekenWebContext))]
    [Migration("20201007190030_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Afbeelding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bestandsnaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Afbeelding");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AggregatedCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Value", "Key")
                        .IsUnique()
                        .HasName("UX_HangFire_CounterAggregated_Key");

                    b.ToTable("AggregatedCounter","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GebruikerId")
                        .HasColumnName("Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .HasName("IX_Gebruiker_Id");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("GebruikerId")
                        .HasColumnName("Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey", "UserId")
                        .HasName("PK_dbo.AspNetUserLogins");

                    b.HasIndex("GebruikerId")
                        .HasName("IX_Gebruiker_Id");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserRoles", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("GebruikerId")
                        .HasColumnName("Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_dbo.AspNetUserRoles");

                    b.HasIndex("GebruikerId")
                        .HasName("IX_Gebruiker_Id");

                    b.HasIndex("RoleId")
                        .HasName("IX_RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Boek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Afkorting")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Boeknaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OudId")
                        .HasColumnType("int");

                    b.Property<int>("Sortering")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ToonHoofdstukNummer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("TaalId");

                    b.ToTable("Boek");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.BoekHoofdstuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoekId")
                        .HasColumnType("int");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OudId")
                        .HasColumnType("int");

                    b.Property<int?>("Sortering")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoekId");

                    b.ToTable("BoekHoofdstuk");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoekHoofdstukId")
                        .HasColumnType("int");

                    b.Property<int>("Hoofdstuk")
                        .HasColumnType("int");

                    b.Property<int>("Sortering")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoekHoofdstukId");

                    b.ToTable("BoekHoofdstukTekst");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Counter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Value", "Key")
                        .HasName("IX_HangFire_Counter_Key");

                    b.ToTable("Counter","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Gebeurtenis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OudId")
                        .HasColumnType("int");

                    b.Property<int>("Sortering")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("TaalId");

                    b.ToTable("Gebeurtenis");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LaatstIngelogd")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.GebruikerMailing", b =>
                {
                    b.Property<int>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<int>("MailingId")
                        .HasColumnType("int");

                    b.HasKey("GebruikerId", "MailingId")
                        .HasName("PK_dbo.GebruikerMailing");

                    b.HasIndex("MailingId");

                    b.ToTable("GebruikerMailing");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Gemeente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Gemeente");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Hash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExpireAt", "Key")
                        .HasName("IX_HangFire_Hash_Key");

                    b.HasIndex("Id", "ExpireAt")
                        .HasName("IX_HangFire_Hash_ExpireAt");

                    b.HasIndex("Key", "Field")
                        .IsUnique()
                        .HasName("UX_HangFire_Hash_Key_Field");

                    b.ToTable("Hash","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Inbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AanEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AanNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Aangemaakt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Afgehandeld")
                        .HasColumnType("bit");

                    b.Property<int?>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<int>("InboxTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Inhoud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PreekId")
                        .HasColumnType("int");

                    b.Property<string>("VanEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("VanNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.HasIndex("InboxTypeId");

                    b.HasIndex("PreekId");

                    b.ToTable("Inbox");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.InboxOpvolging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Aangemaakt")
                        .HasColumnType("datetime");

                    b.Property<int?>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<int>("InboxId")
                        .HasColumnType("int");

                    b.Property<string>("Onderwerp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VerstuurAlsMail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Verstuurd")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.HasIndex("InboxId");

                    b.ToTable("InboxOpvolging");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.InboxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("InboxType");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arguments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("InvocationData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("StateName")
                        .HasName("IX_HangFire_Job_StateName");

                    b.HasIndex("Id", "ExpireAt")
                        .HasName("IX_HangFire_Job_ExpireAt");

                    b.ToTable("Job","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.JobParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId", "Name")
                        .HasName("IX_HangFire_JobParameter_JobIdAndName");

                    b.ToTable("JobParameter","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.JobQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FetchedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Queue", "FetchedAt")
                        .HasName("IX_HangFire_JobQueue_QueueAndFetchedAt");

                    b.ToTable("JobQueue","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.LezingCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OudId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LezingCategorie");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "ExpireAt")
                        .HasName("IX_HangFire_List_ExpireAt");

                    b.HasIndex("ExpireAt", "Value", "Key")
                        .HasName("IX_HangFire_List_Key");

                    b.ToTable("List","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Mailing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MailChimpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaalId");

                    b.ToTable("Mailing");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.NieuwsbriefInschrijving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Aangemeld")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Afgemeld")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaalId");

                    b.ToTable("NieuwsbriefInschrijving");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Aangemaakt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AangemaaktDoor")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("Bijgewerkt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BijgewerktDoor")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("Gepubliceerd")
                        .HasColumnType("bit");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("TonenOpHomepage")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AangemaaktDoor");

                    b.HasIndex("BijgewerktDoor");

                    b.ToTable("Pagina");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Predikant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Gemeente")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("GemeenteId")
                        .HasColumnType("int");

                    b.Property<bool>("HideFromIndexingRobots")
                        .HasColumnType("bit");

                    b.Property<bool>("HideFromPodcast")
                        .HasColumnType("bit");

                    b.Property<string>("LevensPeriode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Opmerking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OudId")
                        .HasColumnName("OudID")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.Property<string>("Titels")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tussenvoegsels")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Voorletters")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("GemeenteId");

                    b.HasIndex("TaalId");

                    b.ToTable("Predikant");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Preek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AangemaaktDoor")
                        .HasColumnType("int");

                    b.Property<int?>("AangepastDoor")
                        .HasColumnType("int");

                    b.Property<int>("AantalKeerGedownload")
                        .HasColumnType("int");

                    b.Property<int?>("AfbeeldingId")
                        .HasColumnType("int");

                    b.Property<bool>("AutomatischeTeksten")
                        .HasColumnType("bit");

                    b.Property<int?>("Bestandsgrootte")
                        .HasColumnType("int");

                    b.Property<string>("Bestandsnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BijbeltekstOmschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoekhoofdstukId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumAangemaakt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DatumBijgewerkt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DatumGepubliceerd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumPreek")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("Duur")
                        .HasColumnType("time");

                    b.Property<int?>("GebeurtenisId")
                        .HasColumnType("int");

                    b.Property<int?>("GedeelteTotVersId")
                        .HasColumnType("int");

                    b.Property<int?>("GedeelteVanVersId")
                        .HasColumnType("int");

                    b.Property<int?>("GemeenteId")
                        .HasColumnType("int");

                    b.Property<bool>("Gepubliceerd")
                        .HasColumnType("bit");

                    b.Property<int?>("Hoofdstuk")
                        .HasColumnType("int");

                    b.Property<string>("Informatie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeesPreekTekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LezingCategorieId")
                        .HasColumnType("int");

                    b.Property<string>("LezingOmschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeditatieTekst")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("OudId")
                        .HasColumnName("OudID")
                        .HasColumnType("int");

                    b.Property<int?>("PredikantId")
                        .HasColumnType("int");

                    b.Property<int>("PreekTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Punt1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Punt2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Punt3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Punt4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Punt5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("SerieId")
                        .HasColumnType("int");

                    b.Property<string>("SourceFileName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.Property<string>("ThemaOmschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotVers")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("VanVers")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("VersOmschrijving")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("VersTotId")
                        .HasColumnType("int");

                    b.Property<int?>("VersVanId")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AangemaaktDoor");

                    b.HasIndex("AangepastDoor");

                    b.HasIndex("AfbeeldingId");

                    b.HasIndex("BoekhoofdstukId");

                    b.HasIndex("GebeurtenisId");

                    b.HasIndex("GedeelteTotVersId");

                    b.HasIndex("GedeelteVanVersId");

                    b.HasIndex("GemeenteId");

                    b.HasIndex("LezingCategorieId");

                    b.HasIndex("PredikantId");

                    b.HasIndex("PreekTypeId");

                    b.HasIndex("SerieId");

                    b.HasIndex("TaalId");

                    b.HasIndex("VersTotId");

                    b.HasIndex("VersVanId");

                    b.ToTable("Preek");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.PreekCookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("AfgespeeldTot")
                        .HasColumnType("time");

                    b.Property<DateTime?>("BladwijzerGelegdOp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<string>("Opmerking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.HasIndex("PreekId");

                    b.ToTable("PreekCookie");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.PreekLezenEnZingen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PreekId")
                        .HasColumnType("int");

                    b.Property<string>("Soort")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Sortering")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("PreekId");

                    b.ToTable("PreekLezenEnZingen");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.PreekType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("PreekType");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Schema", b =>
                {
                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Version")
                        .HasName("PK_HangFire_Schema");

                    b.ToTable("Schema","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.SchemaVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Applied")
                        .HasColumnType("datetime");

                    b.Property<string>("ScriptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SchemaVersions");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OudId")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("TaalId");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Server", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastHeartbeat")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Server","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Id", "ExpireAt")
                        .HasName("IX_HangFire_Set_ExpireAt");

                    b.HasIndex("Key", "Value")
                        .IsUnique()
                        .HasName("UX_HangFire_Set_KeyAndValue");

                    b.HasIndex("ExpireAt", "Value", "Key")
                        .HasName("IX_HangFire_Set_Key");

                    b.ToTable("Set","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Spotlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AfbeeldingId")
                        .HasColumnType("int");

                    b.Property<string>("LinkTitel")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("NieuwVenster")
                        .HasColumnType("bit");

                    b.Property<int>("Sortering")
                        .HasColumnType("int");

                    b.Property<string>("Subtitel")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TaalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AfbeeldingId");

                    b.HasIndex("TaalId");

                    b.ToTable("Spotlight");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .HasName("IX_HangFire_State_JobId");

                    b.ToTable("State","HangFire");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Taal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Taal");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Tekst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kop")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PaginaId")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.Property<string>("Tekst1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tekst")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('1')");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.HasIndex("TaalId");

                    b.ToTable("Tekst");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.ZoekOpdracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AudioPreken")
                        .HasColumnType("bit");

                    b.Property<string>("Boek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoekHoofdstuk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoekHoofdstukId")
                        .HasColumnType("int");

                    b.Property<int?>("BoekId")
                        .HasColumnType("int");

                    b.Property<string>("Gebeurtenis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GebeurtenisId")
                        .HasColumnType("int");

                    b.Property<int>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<string>("Gemeente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GemeenteId")
                        .HasColumnType("int");

                    b.Property<int?>("Hoofdstuk")
                        .HasColumnType("int");

                    b.Property<bool>("LeesPreken")
                        .HasColumnType("bit");

                    b.Property<string>("LezingCategorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LezingCategorieId")
                        .HasColumnType("int");

                    b.Property<bool>("Lezingen")
                        .HasColumnType("bit");

                    b.Property<string>("Predikant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PredikantId")
                        .HasColumnType("int");

                    b.Property<Guid>("PubliekeSleutel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerieId")
                        .HasColumnType("int");

                    b.Property<int?>("SorteerOp")
                        .HasColumnType("int");

                    b.Property<int>("SorteerVolgorde")
                        .HasColumnType("int");

                    b.Property<int>("TaalId")
                        .HasColumnType("int");

                    b.Property<string>("Zoekterm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.ToTable("ZoekOpdracht");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.AspNetUserClaims_dbo.Gebruiker_Gebruiker_Id");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.AspNetUserLogins_dbo.Gebruiker_Gebruiker_Id");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.Gebruiker_Gebruiker_Id");

                    b.HasOne("PrekenWeb.WebApi.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Boek", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Boek")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Boek_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.BoekHoofdstuk", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Boek", "Boek")
                        .WithMany("BoekHoofdstuk")
                        .HasForeignKey("BoekId")
                        .HasConstraintName("FK_dbo.BoekHoofdstuk_dbo.Boek_BoekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstuk", "BoekHoofdstuk")
                        .WithMany("BoekHoofdstukTekst")
                        .HasForeignKey("BoekHoofdstukId")
                        .HasConstraintName("FK_dbo.BoekHoofdstukTekst_dbo.BoekHoofdstuk_BoekHoofdstukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Gebeurtenis", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Gebeurtenis")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Gebeurtenis_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.GebruikerMailing", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("GebruikerMailing")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.GebruikerMailing_dbo.Gebruiker_GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Mailing", "Mailing")
                        .WithMany("GebruikerMailing")
                        .HasForeignKey("MailingId")
                        .HasConstraintName("FK_dbo.GebruikerMailing_dbo.Mailing_MailingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Inbox", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("Inbox")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.Inbox_dbo.Gebruiker_GebruikerId");

                    b.HasOne("PrekenWeb.WebApi.Models.InboxType", "InboxType")
                        .WithMany("Inbox")
                        .HasForeignKey("InboxTypeId")
                        .HasConstraintName("FK_dbo.Inbox_dbo.InboxType_InboxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Preek", "Preek")
                        .WithMany("Inbox")
                        .HasForeignKey("PreekId")
                        .HasConstraintName("FK_dbo.Inbox_dbo.Preek_PreekId");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.InboxOpvolging", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("InboxOpvolging")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.InboxOpvolging_dbo.Gebruiker_GebruikerId");

                    b.HasOne("PrekenWeb.WebApi.Models.Inbox", "Inbox")
                        .WithMany("InboxOpvolging")
                        .HasForeignKey("InboxId")
                        .HasConstraintName("FK_dbo.InboxOpvolging_dbo.Inbox_InboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.JobParameter", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Job", "Job")
                        .WithMany("JobParameter")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_HangFire_JobParameter_Job")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Mailing", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Mailing")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Mailing_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.NieuwsbriefInschrijving", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("NieuwsbriefInschrijving")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.NieuwsbriefInschrijving_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Pagina", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "AangemaaktDoorNavigation")
                        .WithMany("PaginaAangemaaktDoorNavigation")
                        .HasForeignKey("AangemaaktDoor")
                        .HasConstraintName("FK_dbo.Pagina_dbo.Gebruiker_AangemaaktDoor")
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "BijgewerktDoorNavigation")
                        .WithMany("PaginaBijgewerktDoorNavigation")
                        .HasForeignKey("BijgewerktDoor")
                        .HasConstraintName("FK_dbo.Pagina_dbo.Gebruiker_BijgewerktDoor")
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Predikant", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gemeente", "GemeenteNavigation")
                        .WithMany("Predikant")
                        .HasForeignKey("GemeenteId")
                        .HasConstraintName("FK_dbo.Predikant_dbo.Gemeente_GemeenteId");

                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Predikant")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Predikant_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Preek", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "AangemaaktDoorNavigation")
                        .WithMany("PreekAangemaaktDoorNavigation")
                        .HasForeignKey("AangemaaktDoor")
                        .HasConstraintName("FK_dbo.Preek_dbo.Gebruiker_AangemaaktDoor");

                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "AangepastDoorNavigation")
                        .WithMany("PreekAangepastDoorNavigation")
                        .HasForeignKey("AangepastDoor")
                        .HasConstraintName("FK_dbo.Preek_dbo.Gebruiker_AangepastDoor");

                    b.HasOne("PrekenWeb.WebApi.Models.Afbeelding", "Afbeelding")
                        .WithMany("Preek")
                        .HasForeignKey("AfbeeldingId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Afbeelding_AfbeeldingId");

                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstuk", "Boekhoofdstuk")
                        .WithMany("Preek")
                        .HasForeignKey("BoekhoofdstukId")
                        .HasConstraintName("FK_dbo.Preek_dbo.BoekHoofdstuk_BoekhoofdstukId");

                    b.HasOne("PrekenWeb.WebApi.Models.Gebeurtenis", "Gebeurtenis")
                        .WithMany("Preek")
                        .HasForeignKey("GebeurtenisId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Gebeurtenis_GebeurtenisId");

                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", "GedeelteTotVers")
                        .WithMany("PreekGedeelteTotVers")
                        .HasForeignKey("GedeelteTotVersId")
                        .HasConstraintName("FK_dbo.Preek_dbo.BoekHoofdstukTekst_GedeelteTotVersId");

                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", "GedeelteVanVers")
                        .WithMany("PreekGedeelteVanVers")
                        .HasForeignKey("GedeelteVanVersId")
                        .HasConstraintName("FK_dbo.Preek_dbo.BoekHoofdstukTekst_GedeelteVanVersId");

                    b.HasOne("PrekenWeb.WebApi.Models.Gemeente", "Gemeente")
                        .WithMany("Preek")
                        .HasForeignKey("GemeenteId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Gemeente_GemeenteId");

                    b.HasOne("PrekenWeb.WebApi.Models.LezingCategorie", "LezingCategorie")
                        .WithMany("Preek")
                        .HasForeignKey("LezingCategorieId")
                        .HasConstraintName("FK_dbo.Preek_dbo.LezingCategorie_LezingCategorieId");

                    b.HasOne("PrekenWeb.WebApi.Models.Predikant", "Predikant")
                        .WithMany("Preek")
                        .HasForeignKey("PredikantId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Predikant_PredikantId");

                    b.HasOne("PrekenWeb.WebApi.Models.PreekType", "PreekType")
                        .WithMany("Preek")
                        .HasForeignKey("PreekTypeId")
                        .HasConstraintName("FK_dbo.Preek_dbo.PreekType_PreekTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Serie", "Serie")
                        .WithMany("Preek")
                        .HasForeignKey("SerieId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Serie_SerieId");

                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Preek")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Preek_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", "VersTot")
                        .WithMany("PreekVersTot")
                        .HasForeignKey("VersTotId")
                        .HasConstraintName("FK_dbo.Preek_dbo.BoekHoofdstukTekst_VersTotId");

                    b.HasOne("PrekenWeb.WebApi.Models.BoekHoofdstukTekst", "VersVan")
                        .WithMany("PreekVersVan")
                        .HasForeignKey("VersVanId")
                        .HasConstraintName("FK_dbo.Preek_dbo.BoekHoofdstukTekst_VersVanId");
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.PreekCookie", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("PreekCookie")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.PreekCookie_dbo.Gebruiker_GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Preek", "Preek")
                        .WithMany("PreekCookie")
                        .HasForeignKey("PreekId")
                        .HasConstraintName("FK_dbo.PreekCookie_dbo.Preek_PreekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.PreekLezenEnZingen", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Preek", "Preek")
                        .WithMany("PreekLezenEnZingen")
                        .HasForeignKey("PreekId")
                        .HasConstraintName("FK_dbo.PreekLezenEnZingen_dbo.Preek_PreekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Serie", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Serie")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Serie_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Spotlight", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Afbeelding", "Afbeelding")
                        .WithMany("Spotlight")
                        .HasForeignKey("AfbeeldingId")
                        .HasConstraintName("FK_dbo.Spotlight_dbo.Afbeelding_AfbeeldingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Spotlight")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Spotlight_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.State", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Job", "Job")
                        .WithMany("State")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_HangFire_State_Job")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.Tekst", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Pagina", "Pagina")
                        .WithMany("Tekst")
                        .HasForeignKey("PaginaId")
                        .HasConstraintName("FK_dbo.Tekst_dbo.Pagina_PaginaId");

                    b.HasOne("PrekenWeb.WebApi.Models.Taal", "Taal")
                        .WithMany("Tekst")
                        .HasForeignKey("TaalId")
                        .HasConstraintName("FK_dbo.Tekst_dbo.Taal_TaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrekenWeb.WebApi.Models.ZoekOpdracht", b =>
                {
                    b.HasOne("PrekenWeb.WebApi.Models.Gebruiker", "Gebruiker")
                        .WithMany("ZoekOpdracht")
                        .HasForeignKey("GebruikerId")
                        .HasConstraintName("FK_dbo.ZoekOpdracht_dbo.Gebruiker_GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
