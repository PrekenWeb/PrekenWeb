@using Data.ViewModels
@using Prekenweb.Website.Lib.HtmlHelpers
@model Prekenweb.Website.Areas.Website.Models.PreekOpen
@{
    ViewBag.Title = Model.Titel;
    var minister = Model.Preek.PredikantId.HasValue ? Model.Preek.Predikant : null;
    var ministerName = minister != null ? minister.VolledigeNaam : string.Empty;

    string bijbelboek = Model.Preek.BoekhoofdstukId.HasValue ? Model.Preek.BoekHoofdstuk.Omschrijving : string.Empty;

    if (minister != null && minister.HideFromIndexingRobots)
    {
        ViewBag.HideFromIndexingRobots = true;
    }

    if (string.IsNullOrWhiteSpace(Model.Preek.ThemaOmschrijving))
    {
        if (!string.IsNullOrEmpty(Model.Preek.BijbeltekstOmschrijving))
        {
            ViewBag.Description = Model.Preek.BijbeltekstOmschrijving;
        }
        else
        {
            ViewBag.Description = Resources.StandaardMetaDescription;
        }
    }
    else
    {
        ViewBag.Description = Model.Preek.ThemaOmschrijving;
    }
    string GedeelteTekst = string.Empty;
    if (Model.Preek.BoekHoofdstuk != null)
    {
        GedeelteTekst += Model.Preek.BoekHoofdstuk.Omschrijving;
    }
    if (Model.Preek.Hoofdstuk.HasValue && Model.Preek.Hoofdstuk.Value > 0)
    {
        GedeelteTekst += " " + Model.Preek.Hoofdstuk;
    }
    GedeelteTekst += "<span> : </span>";
    if (string.IsNullOrWhiteSpace(Model.Preek.VersOmschrijving))
    {
        if (!string.IsNullOrEmpty(Model.Preek.VanVers))
        {
            if (string.IsNullOrEmpty(Model.Preek.TotVers))
            {
                GedeelteTekst += Resources.Vanaf;
            }
            GedeelteTekst += "<span> " + Resources.Vers.ToLower() + " </span>";
            GedeelteTekst += Model.Preek.VanVers;
        }
        if (!string.IsNullOrEmpty(Model.Preek.TotVers))
        {
            GedeelteTekst += "<span>" + Resources.Tot + "</span>";
            GedeelteTekst += Model.Preek.TotVers;
        }
    }
    else
    {
        GedeelteTekst += Model.Preek.VersOmschrijving;
    }

    var sermonChangeDateTime = Model.Preek.DatumBijgewerkt ??
                               Model.Preek.DatumAangemaakt ??
                               DateTime.UtcNow;
    var sermonChangeDateTimeString = sermonChangeDateTime.ToString("yyyyMMddhhmmss");
}
@section ogMetaTags{

    @if (Model.Preek.PreekTypeId != (int)PreekTypeEnum.LeesPreek && Model.Preek.PreekTypeId != (int)PreekTypeEnum.Meditatie)
    {
        <meta property="og:type" content="music.song" />
        <meta property="og:audio" content="@Url.ContentAbsolute(Url.Action("Download", new {Id = Model.Preek.Id, inline = false}))" />
        <meta property="og:audio:type" content="audio/vnd.facebook.bridge" />

        <meta property="music:musician" content="@Url.ContentAbsolute("~/")">
        <meta property="music:musician" content="@Url.ContentAbsolute("~/")">
        <meta property="music:album" content="@Url.ContentAbsolute(Url.Action("Download", new {Id = Model.Preek.Id, inline = false}))">
        <meta property="music:album:track" content="@Model.Preek.Id">
        if (Model.Preek.Duur.HasValue)
        {
            <meta property="music:duration" content="@Model.Preek.Duur.Value.TotalSeconds">
        }
    }

}
@section GoogleAnalyticsScripts{
    @if (!string.IsNullOrEmpty(ministerName))
    {
        <text>_gaq.push(['_setCustomVar',
            1,                // Slot 1-5.
            'Predikant',      // Name of variable
            '@ministerName',     // Value
            3                 // 1 = visitor 2 = session 3 = page
            ]);</text>
    }
    @if (!string.IsNullOrEmpty(ministerName))
    {
        <text>_gaq.push(['_setCustomVar',
            2,
            'Bijbelboek',
            '@bijbelboek',
            3
            ]);</text>
    }
    _gaq.push(['_setCustomVar',
    3,
    'PreekType',
    '@Model.Preek.PreekType.Omschrijving',
    3
    ]);
}
<div class="Preek">
    <h1>@ViewBag.Title</h1>


    @if (Session["ZoekParameters"] != null && !string.IsNullOrEmpty(Session["ZoekParameters"].ToString()))
    {
        <section id="zoekresultaten">
            <h2>@Resources.Zoekresultaten</h2>
            <a href="@Url.Action("Index", "Zoeken")?@Session["ZoekParameters"]" class="">
                <div class="fa fa-arrow-left"></div>
                @Resources.TerugNaarZoekresultaten
            </a>
        </section>
    }
    @if (Model.Preek.PreekTypeId != (int)PreekTypeEnum.LeesPreek && Model.Preek.PreekTypeId != (int)PreekTypeEnum.Meditatie)
    {
        <section id="afspelen">
            <h2>@Resources.Afspelen</h2>
            <div id="jquery_jplayer_1" class="jp-jplayer"></div>
            <div id="jp_container_1">
                <div class="jp-gui">
                    <div class="jp-controls-holder">
                        <div class="jp-controls">
                            <button class="jp-play ui-state-default ui-corner-all fa fa-play" role="button" tabindex="0"><span class="sr-only">@Resources.Afspelen</span></button>
                            <button class="jp-pause ui-state-default ui-corner-all fa fa-pause" role="button" tabindex="0"><span class="sr-only">@Resources.Pauze</span></button>
                            <div class="volume-control">
                                <span class="volume-label">Volume:&nbsp;</span>
                                <div class="jp-volume-slider"></div>
                            </div>
                            <span class="DownloadLinkInPlayer jp-button ui-state-default ui-corner-all">
                                <a href="@Url.Action("Download", new {id = Model.Preek.Id, inline = false})" class="" onclick="if (checkiOS('@Model.Preek.Bestandsnaam')) { window.location = this.href; }return false;;">
                                    <div class="fa fa-cloud-download"></div>
                                    @Resources.DownloadPreek
                                </a>
                            </span>
                        </div>
                    </div>
                    <p class="clear"></p>
                    <div class="jp-current-time">00:00</div>
                    <div class="jp-duration">@string.Format("{0:mm\\:ss}", Model.Preek.Duur)</div>
                    <div class="jp-progress-slider"></div>
                    <p class="clear"></p>
                </div>
                <div class="jp-no-solution">
                    <span>Update Required</span>
                    To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.
                </div>
            </div>
            @if (!Request.IsAuthenticated)
            {
                <div class="VerderGaanMetAfspelen">
                    <a href="" onclick="prekenweb.toonMijnReclame('PreekVerderAfluisteren'); return false;">@Resources.ContinueWhereLeftOff</a>
                    <span class="fa fa-mail-reply fa-rotate-90"></span>
                </div>
            }
        </section>
    }
    <section id="onderwerp">
        <h2>
            @if (string.IsNullOrEmpty(Model.Preek.ThemaOmschrijving) || Model.Preek.ThemaOmschrijving.Length > 50)
            {@Resources.Onderwerp }
        else
        { @Model.Preek.ThemaOmschrijving}
        </h2>
        <div class="ColumnL">
            <div class="field">
                <div class="label">@Html.LabelFor(m => m.Preek.PredikantId)</div>
                <div class="value" itemprop="author" itemscope itemtype="http://schema.org/Person">
                    <span itemprop="name">
                        @Html.DisplayFor(m => m.Preek.Predikant)
                    </span>
                </div>
            </div>
            @if (Model.Preek.BoekHoofdstuk != null)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.BoekHoofdstuk)</div>
                    <div class="value">
                        @Html.DisplayFor(m => m.Preek.BoekHoofdstuk)
                        @Html.DisplayFor(m => m.Preek.Hoofdstuk)
                        @if (!string.IsNullOrEmpty(Model.Preek.VanVers))
                        {
                            <span>:</span>@*
                                if (string.IsNullOrEmpty(Model.Preek.TotVers))
                                {
                                <span>@Resources.Vanaf</span>
                                }
                                <span>@Resources.Vers.ToLower() </span>*@
                            @Model.Preek.VanVers
                        }
                        @if (!string.IsNullOrEmpty(Model.Preek.TotVers))
                        {
                            <span>@Resources.Tot</span>
                            @Model.Preek.TotVers
                        }
                    </div>
                </div>
            }
            @if (Model.Preek.Gemeente != null)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.GemeenteId)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Gemeente)</div>
                </div>
            }
            @if (Model.Preek.Serie != null)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Serie)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Serie)</div>
                </div>
            }
            @if (Model.Preek.Gebeurtenis != null)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.GebeurtenisId)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Gebeurtenis)</div>
                </div>
            }
            @if (Model.Preek.PreekTypeId == (int)PreekTypeEnum.Lezing && Model.Preek.LezingCategorieId.HasValue)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.LezingCategorie)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.LezingCategorie)</div>
                </div>
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.LezingOmschrijving)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.LezingOmschrijving)</div>
                </div>
            }
            <div class="field">
                <div class="label">@Html.LabelFor(m => m.Preek.DatumGepubliceerd)</div>
                <div class="value" itemprop="datePublished" content="@string.Format("{0:yyyy-MM-dd}", Model.Preek.DatumGepubliceerd)">@Html.DisplayFor(m => m.Preek.DatumGepubliceerd)</div>
            </div>
            @if (Model.Preek.DatumAangemaakt.HasValue && Model.Preek.DatumBijgewerkt.HasValue && (Model.Preek.DatumAangemaakt.Value - Model.Preek.DatumBijgewerkt.Value).TotalDays > 1)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.DatumBijgewerkt)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.DatumBijgewerkt)</div>
                </div>
            }
            @if (Model.Preek.DatumPreek.HasValue)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.DatumPreek)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.DatumPreek)</div>
                </div>
            }
            @if (Model.LaatsteBezoek.HasValue)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.LaatsteBezoek)</div>
                    <div class="value">@Html.DisplayFor(m => m.LaatsteBezoek)</div>
                </div>
            }
            @if (Request.IsAuthenticated && User.IsInRole("PreekFiatteren"))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.AantalKeerGedownload)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.AantalKeerGedownload)</div>
                </div>
            }
        </div>
        <div class="ColumnL">
            @if (!string.IsNullOrWhiteSpace(Model.Preek.ThemaOmschrijving) && Model.Preek.ThemaOmschrijving.Length > 50)
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.ThemaOmschrijving)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.ThemaOmschrijving)</div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Preek.Punt1))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Punt1)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Punt1)</div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Preek.Punt2))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Punt2)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Punt2)</div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Preek.Punt3))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Punt3)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Punt3)</div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Preek.Punt4))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Punt4)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Punt4)</div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Preek.Punt5))
            {
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Punt5)</div>
                    <div class="value">@Html.DisplayFor(m => m.Preek.Punt5)</div>
                </div>
            }
        </div>
        @if (!string.IsNullOrEmpty(Model.Preek.Video))
        {
            <div class="ColumnMax">
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Video)</div>
                    <div class="value"><a href="@Model.Preek.Video" target="_blank">@Model.Preek.Video</a></div>
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Preek.Informatie))
        {
            <div class="ColumnMax">
                <div class="field">
                    <div class="label">@Html.LabelFor(m => m.Preek.Informatie)</div>
                    <div class="value">@Html.DisplayWithLineBreaksFor(m => m.Preek.Informatie)</div>
                </div>
            </div>
        }
        <p class="clear"></p>
    </section>
    @if (!string.IsNullOrWhiteSpace(Model.Preek.BijbeltekstOmschrijving) || Model.Preek.AutomatischeTeksten)
    {
        <section id="bijbelGedeelte">
            <h2>@Html.Raw(GedeelteTekst)</h2>
            @if (Model.Preek.BoekHoofdstuk != null && Model.Preek.Hoofdstuk.HasValue && !string.IsNullOrEmpty(Model.Preek.BijbeltekstOmschrijving) && !Model.Preek.AutomatischeTeksten)
            {
                @Html.DisplayFor(m => m.Preek.BijbeltekstOmschrijving)
            }
            @if (Model.Preek.AutomatischeTeksten)
            {
                <p class="clear"></p>
                @Html.Action("Bijbelgedeelte", new { versVanId = Model.Preek.VersVanId, versTotId = Model.Preek.VersTotId })
            }
            <p class="clear"></p>
        </section>
    }
    <section id="delen">
        <h2>@Resources.Delen &amp; Download</h2>
        @if (string.IsNullOrEmpty(Model.Preek.Bestandsnaam) && (Model.Preek.PreekTypeId == (int)PreekTypeEnum.LeesPreek || Model.Preek.PreekTypeId == (int)PreekTypeEnum.Meditatie))
        {
            <a href="@Url.Action("Download", new { id = Model.Preek.Id, inline = false, version = sermonChangeDateTimeString, format = "PDF" })" class="GroteDownloadKnop" onclick="return checkiOS('@Model.Preek.Bestandsnaam');">
                <div class="fa fa-save"></div>
                @Resources.DownloadPreekAlsPDF
            </a>
        }
        else
        {
            <a href="@Url.Action("Download", new { id = Model.Preek.Id, inline = false, version = sermonChangeDateTimeString })" class="GroteDownloadKnop" onclick="return checkiOS('@Model.Preek.Bestandsnaam');">
                <div class="fa fa-cloud-download"></div>
                @Resources.DownloadPreek
            </a>
        }

        <ul id="DownloadLinks">
            @if ((!string.IsNullOrWhiteSpace(Model.Preek.LeesPreekTekst) && Model.Preek.PreekTypeId == (int)PreekTypeEnum.LeesPreek) ||
                 (!string.IsNullOrWhiteSpace(Model.Preek.MeditatieTekst) && Model.Preek.PreekTypeId == (int)PreekTypeEnum.Meditatie))
            {
                <li>
                    <a href="@Url.Action("Download", new { id = Model.Preek.Id, inline = false, version = sermonChangeDateTimeString, format = "EPUB" })" class="" onclick="return checkiOS('@Model.Preek.Bestandsnaam');">
                        <div class="fa fa-save"></div>
                        @Resources.DownloadPreekAlsEpub
                    </a>
                </li>
            }
            <li>
                <a href="@Url.Action("GegevensAanvullen", new { preekId = Model.Preek.Id })">
                    <div class="fa fa-edit"></div>
                    @Resources.GegevensAanvullen
                </a>
            </li>


            @if (Request.IsAuthenticated)
            {
                if (Model.Cookie.BladwijzerGelegdOp.HasValue)
                {
                    <li>
                        <a href="@Url.Action("VerwijderBladwijzer", new { preekId = Model.Preek.Id })">
                            <div class="fa fa-bookmark"></div>
                            @string.Format(Resources.BladwijzerAlGelegd, Model.Cookie.BladwijzerGelegdOp)
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <a href="@Url.Action("LegBladwijzer", new { preekId = Model.Preek.Id })" title="@Resources.BladwijzerTooltip" class="tooltip">
                            <div class="fa fa-bookmark"></div>
                            @Resources.BladwijzerLeggen
                        </a>
                    </li>
                }
                <li>
                    <a href="@Url.Action("Bewerk", "Preek", new { Area = "Mijn", Id = Model.Preek.Id })" class="">
                        <div class="fa fa-wrench"></div>
                        @Resources.BewerkDezePreek
                    </a>
                </li>
            }
            else
            {
                <li>
                    <a href="#" onclick="prekenweb.toonMijnReclame('Bladwijzer'); return false;" title="@Resources.BladwijzerTooltip" class="tooltip">
                        <div class="fa fa-bookmark"></div>
                        @Resources.BladwijzerLeggen
                    </a>
                </li>
            }
        </ul>
        <ul id="DelenLinks">
            <li>
                <a href="https://www.facebook.com/dialog/feed?app_id=362897260486418&link=@Url.Encode(Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme))&picture=@Url.ContentAbsolute("~/Content/Images/Logo.png")&name=Prekenweb&caption=Preken,%20lezingen%20en%20leespreken&description=&redirect_uri=@Url.Encode(Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme))" class="" title="" target="_blank">
                    <div class="fa fa-facebook-square"></div>
                    @Resources.DeelOpFacebook
                </a>
            </li>
            <li>
                <a href="http://twitter.com/share?url=@Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme)" class="" id="deelOpTwitterLink" title="" target="_blank">
                    <div class="fa fa-twitter-square"></div>
                    @Resources.DeelOpTwitter
                </a>
            </li>
            <li>
                <a href="http://www.linkedin.com/shareArticle?mini=true&url=@Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme)&title=Preek op prekenweb.nl" class="" title="" id="deelOpLinkedinLink" target="_blank">
                    <div class="fa fa-linkedin-square"></div>
                    @Resources.DeelOpLinkedIn
                </a>
            </li>
            <li>
                <a href="https://wa.me/?text=@Uri.EscapeDataString(Resources.DeelOpWhatsappTitel) @Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme)" class="" title="" id="deelOpWhatsappLink" target="_blank">
                    <div class="fa fa-whatsapp"></div>
                    @Resources.DeelOpWhatsapp
                </a>
            </li>
            <li>
                <a href="mailto:?subject=Preek op Prekenweb.nl&body=Bezoek de preek '@Model.Titel' op prekenweb via deze URL: @Url.Action("Open", null, new { Id = Model.Preek.Id }, Request.Url.Scheme)" class="" title="">
                    <div class="fa fa-envelope"></div>
                    @Resources.DeelViaMail
                </a>
            </li>
        </ul>
        <p class="clear"></p>
    </section>
    @if (Model.Preek.PreekTypeId == (int)PreekTypeEnum.LeesPreek)
    {
        <section id="leespreekTekst">
            <h2>@Resources.LeesPreekTekst</h2>
            @if (!string.IsNullOrWhiteSpace(Model.Preek.LeesPreekTekst) && Model.Preek.PreekTypeId == (int)PreekTypeEnum.LeesPreek)
            {
                <div class="HeleLeespreek">
                    <table class="HeleLeespreekTable">
                        @foreach (var plz in Model.Preek.PreekLezenEnZingens.Where(x => !string.IsNullOrWhiteSpace(x.Omschrijving)).OrderBy(x => x.Sortering))
                        {
                            <tr>
                                <td></td>
                                <td class="ColSoort">@plz.Soort :</td>
                                <td class="ColOmschrijving">@plz.Omschrijving</td>
                            </tr>
                        }
                    </table>
                    @Html.Raw(Model.Preek.LeesPreekTekst)
                </div>
            }
            else
            {
                <iframe src="@Url.Action("Download", new { Id = Model.Preek.Id, inline = true, version = sermonChangeDateTimeString })" class="PreekLezenIframe"></iframe>
            }

            <p class="clear"></p>
        </section>
    }
    @if (Model.Preek.PreekTypeId == (int)PreekTypeEnum.Meditatie)
    {
        <section id="meditatieTekst">
            <h2>@Resources.Meditatie</h2>
            @if (!string.IsNullOrWhiteSpace(Model.Preek.MeditatieTekst) && Model.Preek.PreekTypeId == (int)PreekTypeEnum.Meditatie)
            {
                <div class="HeleLeespreek">
                    @Html.Raw(Model.Preek.MeditatieTekst)
                </div>
            }
            <p class="clear"></p>
        </section>
    }
</div>

@section scripts {
    <script type="text/javascript">
        function checkiOS(bestandsnaaam) {
            if (bestandsnaaam.indexOf('mp3') === -1) return true;
            if (!navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {
                //alert(bestandsnaaam);
                return true;
            }
            var tochStreamen = confirm("@Resources.iOSDownloadBevestiging");
            if (tochStreamen === true) return true;
            var meerInfo = confirm("@Resources.PodcastMeerInfo");
            if (meerInfo === true) window.location = '@Url.Action("Pagina", "Prekenweb", new { pagina = "iTunes-podcast" })';
            return false;
        }
        $(document).ready(function () {
            $("#deelOpTwitterLink").on("click", function (e) {
                window.open($("#deelOpTwitterLink").attr('href'), 'Deel prekenweb op Twitter', 'width=780, height=400');
                e.preventDefault();
            });

            $("#deelOpLinkedinLink").on("click", function (e) {
                window.open($("#deelOpLinkedinLink").attr('href'), 'Deel prekenweb op LinkedIn', 'width=580, height=400');
                e.preventDefault();
            });

            var myPlayer = $("#jquery_jplayer_1"),
                myPlayerData,
                fixFlash_mp4,
                fixFlash_mp4_id,
                ignore_timeupdate,
                options = {
                    ready: function (event) {
                        if (event.jPlayer.status.noVolume) {
                            $(".jp-gui").addClass("jp-no-volume");
                        }
                        $(this).jPlayer("setMedia", {
                            mp3: "@Url.Action("Download", new { id = Model.Preek.Id, inline = true })"
                            //mp3: "@Url.Content(string.Format("~/Content/preken/{0}", Model.Preek.Bestandsnaam))"
                        });
                    },
                    timeupdate: function (event) {
                        if (!ignore_timeupdate) {
                            myControl.progress.slider("value", event.jPlayer.status.currentPercentAbsolute);
                        }
                    },
                    volumechange: function (event) {
                        if (event.jPlayer.options.muted) {
                            myControl.volume.slider("value", 0);
                        } else {
                            myControl.volume.slider("value", event.jPlayer.options.volume);
                        }
                    },
                    swfPath: prekenweb.rootUrl + "Scripts/",
                    supplied: "mp3",
                    cssSelectorAncestor: "#jp_container_1",
                    wmode: "window"
                },
            myControl = {
                progress: $(options.cssSelectorAncestor + " .jp-progress-slider"),
                volume: $(options.cssSelectorAncestor + " .jp-volume-slider")
            };

            // Instance jPlayer
            myPlayer.jPlayer(options);

            // A pointer to the jPlayer data object
            myPlayerData = myPlayer.data("jPlayer");

            // Define hover states of the buttons
            $('.jp-gui ul li').hover(
                function () { $(this).addClass('hover'); },
                function () { $(this).removeClass('hover'); }
            );

            // Create the progress slider control
            myControl.progress.slider({
                animate: "fast",
                max: 100,
                range: "min",
                step: 0.1,
                value: 0,
                slide: function (event, ui) {
                    var sp = myPlayerData.status.seekPercent;
                    if (sp > 0) {
                        // Apply a fix to mp4 formats when the Flash is used.
                        if (fixFlash_mp4) {
                            ignore_timeupdate = true;
                            clearTimeout(fixFlash_mp4_id);
                            fixFlash_mp4_id = setTimeout(function () {
                                ignore_timeupdate = false;
                            }, 1000);
                        }
                        // Move the play-head to the value and factor in the seek percent.
                        myPlayer.jPlayer("playHead", ui.value * (100 / sp));
                    } else {
                        // Create a timeout to reset this slider to zero.
                        setTimeout(function () {
                            myControl.progress.slider("value", 0);
                        }, 0);
                    }
                }
            });

            // Create the volume slider control
            myControl.volume.slider({
                animate: "fast",
                max: 1,
                range: "min",
                step: 0.01,
                value: $.jPlayer.prototype.options.volume,
                slide: function (event, ui) {
                    myPlayer.jPlayer("option", "muted", false);
                    myPlayer.jPlayer("option", "volume", ui.value);
                }
            });


        });

    </script>
    @if (Request.IsAuthenticated && Model.Cookie != null)
    {
        <script>
            setInterval(function () {
                var jp = $('#jquery_jplayer_1'), jpData = jp.data('jPlayer');
                console.log(jpData.status.currentTime);

                $.ajax({
                    url: '@Url.Action("UpdateTimePlayed")',
                    data: { timePlayed: jpData.status.currentTime, cookieId: '@Model.Cookie.Id' },
                    dataType: "json",
                    //callbackParameter: "jsoncallback",
                    timeout: 5000,
                    success: function (data) {

                    },
                    error: function (XHR, textStatus, errorThrown) {
                    }
                });
            }, 15000);
        </script>
        if (Request.IsAuthenticated && Model.Preek.Duur.HasValue && Model.Cookie != null && Model.Cookie.AfgespeeldTot.HasValue && Model.Cookie.AfgespeeldTot.Value.TotalSeconds > 10)
        {
            var preekLengte = Model.Preek.Duur.Value.TotalSeconds;
            var afgespeeldTot = Model.Cookie.AfgespeeldTot.Value.TotalSeconds;
            var percentage = Math.Round((double)((afgespeeldTot / preekLengte) * 100), 0);

            <script type="text/javascript">
                $(document).ready(function () {
                    setTimeout(function () {
                        console.log('$("#jquery_jplayer_1").jPlayer("playHead", "@string.Format("{0:0.}", percentage)")');
                        $('#jquery_jplayer_1').jPlayer("playHead", '@string.Format("{0:0.}", percentage)');
                    }, 1000);
                });

            </script>
        }
    }
}